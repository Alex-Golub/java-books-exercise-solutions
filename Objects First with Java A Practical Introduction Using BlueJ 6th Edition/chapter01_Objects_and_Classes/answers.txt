Exercise 1.2
What happens if you call moveDown twice? Or three times?
What happens if you call makeInvisible twice?
=== ANS ===
Object is moving along the y-axis(vertically) fixed number of pixels.
Invoking makeInvisible one time will make the object disappear from canvas.
Invoking it again does nothing, though object is still exist.


Exercise 1.3
Find out how you can use moveHorizontal to move the circle 70 pixels to the left
=== ANS ===
moveHorizontal positive value => move object to the right
               negative value => move object to the left


Exercise 1.5
This is a very simple example, and not many colors are supported.
See what happens when you specify a color that is not known.
=== ANS ===
Nothing is happening.


Exercise 1.6
Invoke the changeColor method, and write the color into the
parameter field without the quotes. What happens?
=== ANS ===
Error: cannot find symbol - variable 9gag.
We must type in a data of type String (i.e. enclosed with "")


Exercise 1.9
Figure 1.8 shows two different images.
Choose one of these images and recreate it using the shapes from the figures project.
While you are doing this, write down what you have to do to achieve this.
Could it be done in different ways?
=== ANS ===
Left image:
1. Create the following instances: Triangle, two Squares, circle
2. Name each instance as follows respectively: roof, body, window, sun
3. invoke makeVisible on all created objects.
4. sun :Circle
  4.1 changeColor("yellow")
  4.2 moveUp()    3 times
  4.3 moveRight() 4 times
5. body :Square
  5.1 moveLeft() 10 times
  5.2 changeSize(150)
6. window :Square
  6.1 moveLeft() 9 times
  6.2 changeSize(50)
  6.3 moveDown()
7. roof :Triangle
  7.1 moveUp() 4 times
  7.2 moveLeft() 2 times
  7.3 changeSize(70, 210)

Right image:
1. Create two Circle, two Persons
2. Invoke makeVisible() on each
3. sun :Circle
  3.1 moveRight() 5 times
  3.2 changeSize(50)
  3.3 changeColor("yellow")
4. parent :Person
  4.1 moveLeft() 2 times
5. kid :Person
  5.1 changeSize(50, 20)
  5.2 moveVertical(15)
6. earth :Circle
  6.1 changeSize(2000)
  6.2 xPosition = -750
  6.3 yPosition = 235
  6.3 changeColor("green")


Exercise 1.14
How do you think the Picture class draws the picture?
=== ANS ===
It has fields which correspond to each picture element which is one of the
classes Triangle, Circle, Square.
When draw() invoked each instance is set to the right placement on canvas and
visibility toggled.


Exercise 1.16
In the source code of class Picture, find the part that actually
draws the picture.
Change it so that the sun will be blue rather than yellow.
=== ANS ===
sun.changeColor("yellow"); => sun.changeColor("blue");


Exercise 1.18 Challenge exercise
Add a sunset to the single-sun version of Picture.
That is, make the sun go down slowly.
Remember: The circle has a method slowMoveVertical that you can use to do this.
=== ANS ===
to draw() method add after sun2.makeVisible();
sun2.slowMoveVertical(300);


Exercise 1.19 Challenge exercise
We now want the sunset in a separate method, so that we can call draw and see
the picture with the sun up, and then call sunset (a separate method!)
to make the sun go down.
=== ANS ===
public void sunset() {
  sun2.slowMoveVertical(300);
}


Exercise 1.20 Challenge exercise
Make a person walk up to the house after the sunset.
=== ANS ===
see source code of Picture class


Exercise 1.22
Create some Student objects.
Call the getName method on each object.
Explain what is happening.
=== ANS ===
Upon creating new student instance from Student class we get a new student
object with 3 field: name :String, id :String, credits :int
WHen getName() method invoked on student instance we get back a String data type
representing the name of this student.

NOTE: IF STUDENT NAME IS LESS THEN FOUR CHARACTERS LONG OR ID IS LESS THEN 3 CHARACTERS LONG
AND WE INVOKE getLoginName() AN EXCEPTION WILL BE THROWN.
THIS IS BECAUSE IN getLoginName() METHOD IT TRIES TO EXTRACT FOUR LETTER STRING OF FULL NAME.


Exercise 1.24
Call the numberOfStudents method of that class. What does it do?
=== ANS ===
It invokes numberOfStudents() method which has return date of type int which representing
the currently enrolled number of students.


Exercise 1.28
Use the inspector on a LabClass object to discover what fields it has.
=== ANS ===
private String instructor;
private String room;
private String timeAndDay;
private ArrayList<Student> students;
private int capacity;


Exercise 1.30
In this chapter we have mentioned the data types int and String.
Java has more predefined data types. Find out what they are and what they are used for.
=== ANS ===
Primitive types there are 8 of them:
byte, short, int, long => used for whole numbers each has predefined memory space.
float, double => for floating point values
boolean => true / false
char => unsigned value (starts from 0 to 2^32) used for representing characters.
Also there are hundreds of predefined class shipped with Java API e.g. Integer, String, Random,
Scanner, StringBuilder etc...


Exercise 1.31
What are the types of the following values?
0        => int (in java whole number is treated as int data type)
"hello"  => String
101      => int
-1       => int
true     => boolean
"33"     => String
3.1415   => double (in java floating point number is by default double data type)


Exercise 1.32
What would you have to do to add a new field, for example one called name, to a circle object?
=== ANS ===
private String name; // private access modifier will be discussed later


Exercise 1.33
Write the header for a method named send that has one parameter of type String,
and does not return a value.
=== ANS ===
public void send(String message) {...} // public also is access modifier will be discussed later


Exercise 1.34
Write the header for a method named average that has two parameters,
both of type int, and returns an int value.
=== ANS ===
public int average(int grade1, int grade2) {...}


Exercise 1.35
Look at the book you are reading right now.
Is it an object or a class?
If it is a class, name some objects.
If it is an object, name its class.
=== ANS ===
This is a specific book thus it is an object which has been created from a general class
(i.e. template) called Book.
Each book instance has Name, Author, ISBN, PublicationDate, etc... these are the field
of a Book class and they are a part of each Book instance.

Exercise 1.36
Can an object have several different classes? Discuss.
=== ANS ===
Yes. As we've seen in the Picture class.
Each Picture instance has fields that are objects (Square, Triangle, Circle).