• R1.1
Explain the difference between using a computer program and programming a computer.
=== ANS ===
Using computer program is to utilize the program functionality to solve problem at hand
while programming a computer is a process of developing steps to solve a problem and
writing it.


• R1.2
Which parts of a computer can store program code?
Which can store user data?
=== ANS ===
Code is stored in text files but when should be executed the are moved to RAM memory
from there CPU can fetch and store processed data.
User data stored on a permanent memory device such as HDD or SSD.


• R1.3
Which parts of a computer serve to give information to the user?
Which parts take user input?
=== ANS ===
Output devices such as: monitor, printer, speakers, give info to the end user.
Input devices such as: keyboard, mouse, writing-pad, are used to get info from end user.


•• R1.4
A toaster is a single-function device, but a computer can be programmed to carry out
different tasks.
Is your cell phone a single-function device, or is it a programmable
computer? (Your answer will depend on your cell phone model.)
=== ANS ===
I have Android device and it has the capapility of preforming lots of calculation and
run different applications i.e. it is a small computer that can carry-out multiple
number of tasks.


•• R1.5
Explain two benefits of using Java over machine code.
=== ANS ===
Java is High-Level programing language i.e. we can write instruction in almost plain
english so other can read it and understand what the program does.
Using high level language makes it easier for writing algorithms (solutions) that can be
understood, rather then writing instructions in machine code that only those how know
it can understand our program.


•• R1.7
What does this program print?
public class Test {
  public static void main(String[] args) {
    System.out.println("39 + 3"); // => 39 + 3
    System.out.println(39 + 3);   // => 42
  }
}


•• R1.8
What does this program print? Pay close attention to spaces.
public class Test {
  public static void main(String[] args) {
    System.out.print("Hello");   // => Hello, new line is not generated when using print
    System.out.println("World"); // => World
  }
} // => HelloWorld


•• R1.9
What is the compile-time error in this program?
public class Test {
  public static void main(String[] args) {
    System.out.println("Hello", "World!"); // => Cannot resolve method 'println(java.lang.String, java.lang.String)
  }
}


•• R1.10
Write three versions of the HelloPrinter.java program that have different
compile-time errors.
Write a version that has a run-time error.
=== ANS ===
public HelloPrinter { // 3. class
  public static void Main(string[] args) {  // => 1. Main, 2. string
  }
}

public class HelloPrinter { // no CE
  public static void main(String[] args) {
  }
}


• R1.11
How do you discover syntax errors?
How do you discover logic errors?
=== ANS ===
Using the help of IDE or when we try to compile .java file we get error
Logic errors are found when the program run and terminates normally but the result
is unexpected.
To found the errors we will use a debugger to check each logic block to find
the problematic calculation


••• R1.12
The cafeteria offers a discount card for sale that entitles you, during a certain period,
to a free meal whenever you have bought a given number of meals at the regular price.
The exact details of the offer change from time to time.
Describe an algorithm that lets you determine whether a particular offer is a good buy.
What other inputs do you need?
=== ANS ===
TODO


•• R1.13
Write an algorithm to settle the following question: A bank account starts out with $10,000.
Interest is compounded monthly at 6 percent per year (0.5 percent per month).
Every month, $500 is withdrawn to meet college expenses.
After how many years is the account depleted?
=== ANS ===
1. Inputs: balance, monthly_interest, withdraw
   Outputs: years take for account
2. let years = 0 and month = 0
   while balance > 0
     balance = balance + balance * monthly_interest - 500
     month = month + 1
     if month == 12
       years = years + 1
       month = 1
   return years


••• R1.14
Consider the question in Exercise •• R1.13.
Suppose the numbers ($10,000, 6 percent, $500) were user selectable.
Are there values for which the algorithm you developed would not terminate?
If so, change the algorithm to make sure it always terminates.
=== ANS ===
If withdraw amount is less then balance + balance * monthly_interest the algorithm
will never stops because balance will never reach zero or negative value.

 let years = 0 and month = 0
 while balance > 0 and withdraw < balance + balance * monthly_interest - 500
  balance = balance + balance * monthly_interest - 500
  month = month + 1
  if month == 12
    years = years + 1
    month = 1
  return years


••• R1.15
In order to estimate the cost of painting a house, a painter needs to know the surface
area of the exterior.
Develop an algorithm for computing that value.
Your inputs are the width, length, and height of the house,
the number of windows and doors, and their dimensions.
(Assume the windows and doors have a uniform size.)
=== ANS ===
windowSurface = windowLength * windowWidth * windowHeight
doorSurface = doorLength * doorWidth * doorHeight
houseSurface = width * length * height

houseSurface - (numOfWindows * windowSurface + numOfDoors * doorSurface)


•• R1.16
In How To 1.1, you made assumptions about the price of gas and
annual usage to compare cars.
Ideally, you would like to know which car is the better deal
without making these assumptions.
Why can’t a computer program solve that problem?
=== ANS ===
TODO


•• R1.16
In How To 1.1, you made assumptions about the price of gas and annual usage to
compare cars. Ideally, you would like to know which car is the better deal without
making these assumptions. Why can’t a computer program solve that problem?
=== ANS ===
TODO


•• R1.17
Suppose you put your younger brother in charge of backing up your work. Write a
set of detailed instructions for carrying out his task. Explain how often he should do
it, and what files he needs to copy from which folder to which location. Explain how
he should verify that the backup was carried out correctly.
=== ANS ===
TODO


• R1.18
Write pseudocode for an algorithm that describes how to prepare Sunday breakfast
in your household.
=== ANS ===
TODO


•• R1.19
The ancient Babylonians had an algorithm for determining the square root of a number a.
Start with an initial guess of a/2. Then find the average of your guess g and a/g.
That’s your next guess. Repeat until two consecutive guesses are close enough.
Write pseudocode for this algorithm.
=== ANS ===
TODO